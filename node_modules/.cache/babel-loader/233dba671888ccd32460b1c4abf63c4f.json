{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/moringa/Documents/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\nfunction App() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]); // const handleAddTransaction = (transaction) => {\n  //   setTransactions = [...transaction, transaction];\n  // }\n\n  useEffect(() => {\n    fetch('http://localhost:8001/transactions').then(resp => resp.json()).then(data => {\n      setTransactions(data);\n      console.log(data);\n    });\n  }, []);\n\n  const addTransaction = (date, description, category, amount) => {\n    fetch('http://localhost:8001/transactions', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"accept\": 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        date,\n        description,\n        category,\n        amount\n      })\n    }).then(resp => resp.json()).then(data => console.log(data));\n  };\n\n  const handleSearch = searchTerm => {\n    if (searchTerm) {\n      const filteredTransactions = transactions.filter(trans => {\n        if (trans.description.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n      setTransactions(filteredTransactions);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui raised segment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment violet inverted\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"The Royal Bank of Flatiron\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountContainer, {\n      transactions: transactions,\n      addTransaction: addTransaction,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/moringa/Documents/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/App.js"],"names":["React","useState","useEffect","AccountContainer","App","transactions","setTransactions","fetch","then","resp","json","data","console","log","addTransaction","date","description","category","amount","method","headers","body","JSON","stringify","id","handleSearch","searchTerm","filteredTransactions","filter","trans","toLowerCase","includes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD,CADa,CAIb;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAC,oCAAD,CAAL,CAA4CC,IAA5C,CAAiDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAAzD,EACGF,IADH,CACQG,IAAI,IAAI;AACZL,MAAAA,eAAe,CAACK,IAAD,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,cAAc,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoBC,QAApB,EAA8BC,MAA9B,KAAyC;AAC9DX,IAAAA,KAAK,CAAC,oCAAD,EACH;AACEY,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAFX;AAKKC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACtBC,QAAAA,EADsB;AAEtBT,QAAAA,IAFsB;AAGtBC,QAAAA,WAHsB;AAItBC,QAAAA,QAJsB;AAKtBC,QAAAA;AALsB,OAAf;AALX,KADG,CAAL,CAaKV,IAbL,CAaUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAblB,EAa+BF,IAb/B,CAaoCG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAb5C;AAeD,GAhBD;;AAsBA,QAAMc,YAAY,GAAIC,UAAD,IAAgB;AACnC,QAAIA,UAAJ,EAAgB;AACd,YAAMC,oBAAoB,GAAGtB,YAAY,CAACuB,MAAb,CAAqBC,KAAD,IAAW;AAC1D,YAAIA,KAAK,CAACb,WAAN,CAAkBc,WAAlB,GAAgCC,QAAhC,CAAyCL,UAAU,CAACI,WAAX,EAAzC,CAAJ,EAAwE;AACtE,iBAAO,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,KAAP;AACD;AACF,OAN4B,CAA7B;AAOAxB,MAAAA,eAAe,CAACqB,oBAAD,CAAf;AACD;AACF,GAXD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,gBAAD;AAAkB,MAAA,YAAY,EAAEtB,YAAhC;AAA8C,MAAA,cAAc,EAAES,cAA9D;AAA8E,MAAA,YAAY,EAAEW;AAA5F;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA5DQrB,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\n\nfunction App() {\n  const [transactions, setTransactions] = useState([])\n\n\n  // const handleAddTransaction = (transaction) => {\n  //   setTransactions = [...transaction, transaction];\n  // }\n\n  useEffect(() => {\n    fetch('http://localhost:8001/transactions').then(resp => resp.json())\n      .then(data => {\n        setTransactions(data)\n        console.log(data)\n      })\n  }, [])\n\n  const addTransaction = (date, description, category, amount) => {\n    fetch('http://localhost:8001/transactions',\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"accept\": 'application/json'\n        }, body: JSON.stringify({\n          id,\n          date,\n          description,\n          category,\n          amount,\n        })\n      }).then(resp => resp.json()).then(data => console.log(data))\n\n  }\n\n\n\n\n\n  const handleSearch = (searchTerm) => {\n    if (searchTerm) {\n      const filteredTransactions = transactions.filter((trans) => {\n        if (trans.description.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n      setTransactions(filteredTransactions);\n    }\n  };\n\n\n  return (\n    <div className=\"ui raised segment\">\n      <div className=\"ui segment violet inverted\">\n        <h2>The Royal Bank of Flatiron</h2>\n      </div>\n      <AccountContainer transactions={transactions} addTransaction={addTransaction} handleSearch={handleSearch} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}